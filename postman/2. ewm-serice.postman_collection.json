{
	"info": {
		"_postman_id": "d4c7161b-7c24-4b73-9055-c54455442083",
		"name": "2. ewm-serice",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23412641"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "admin",
					"item": [
						{
							"name": "User create 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Петров Иван\",\r\n    \"email\": \"petrov.i@practicummail.ru\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "User create name null BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"petrov@practicummail.ru\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "User create name blank BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\",\r\n    \"email\": \"petrov@practicummail.ru\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "User create email null BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Петров Иван\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "User create email blank BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Петров Иван\",\r\n    \"email\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "User create email CONFLICT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Петров Иван\",\r\n    \"email\": \"petrov.i@practicummail.ru\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "User get all",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "User get all BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/users?ids=a",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users"
									],
									"query": [
										{
											"key": "ids",
											"value": "a"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "User delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "User delete NOT_FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/users/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "User create 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Петров Иван\",\r\n    \"email\": \"petrov.i@practicummail.ru\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"users"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "categories",
			"item": [
				{
					"name": "admin",
					"item": [
						{
							"name": "Category create 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Концерты\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Category create name null BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Category create name blank BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Category create name CONFLICT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Концерты\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Category delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/categories/:catId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories",
										":catId"
									],
									"variable": [
										{
											"key": "catId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Category delete NOT_FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/categories/:catId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories",
										":catId"
									],
									"variable": [
										{
											"key": "catId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "!!!Category delete CONFLICT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([409]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/admin/categories/:catId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories",
										":catId"
									],
									"variable": [
										{
											"key": "catId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Category create 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Концерты\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Category update 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Театры\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/categories/:catId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories",
										":catId"
									],
									"variable": [
										{
											"key": "catId",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Category update NOT_FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Театры\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/categories/:catId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories",
										":catId"
									],
									"variable": [
										{
											"key": "catId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Category create 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Концерты\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Category update CONFLICT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Концерты\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/categories/:catId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"categories",
										":catId"
									],
									"variable": [
										{
											"key": "catId",
											"value": "3"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "public",
					"item": [
						{
							"name": "Category get all",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Category get all BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories?from=0&size=a",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "size",
											"value": "a"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Category get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories/:catId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										":catId"
									],
									"variable": [
										{
											"key": "catId",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Category get BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories/:catId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										":catId"
									],
									"variable": [
										{
											"key": "catId",
											"value": "a"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Category get NOT_FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories/:catId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										":catId"
									],
									"variable": [
										{
											"key": "catId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "events private",
			"item": [
				{
					"name": "private",
					"item": [
						{
							"name": "Event create 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"annotation\": \"Сплав на байдарках похож на полет.\",\r\n    \"category\": 3,\r\n    \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\r\n    \"eventDate\": \"2024-12-31 15:10:05\",\r\n    \"location\": {\r\n        \"lat\": 55.754167,\r\n        \"lon\": 37.62\r\n    },\r\n    \"paid\": true,\r\n    \"participantLimit\": 10,\r\n    \"requestModeration\": false,\r\n    \"title\": \"Сплав на байдарках\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event create category null BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"annotation\": \"Сплав на байдарках похож на полет.\",\r\n    \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\r\n    \"eventDate\": \"2024-12-31 15:10:05\",\r\n    \"location\": {\r\n        \"lat\": 55.754167,\r\n        \"lon\": 37.62\r\n    },\r\n    \"paid\": true,\r\n    \"participantLimit\": 10,\r\n    \"requestModeration\": false,\r\n    \"title\": \"Сплав на байдарках\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event create date FORBIDDEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"annotation\": \"Сплав на байдарках похож на полет.\",\r\n    \"category\": 3,\r\n    \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\r\n    \"eventDate\": \"2023-02-13 10:34:00\",\r\n    \"location\": {\r\n        \"lat\": 55.754167,\r\n        \"lon\": 37.62\r\n    },\r\n    \"paid\": true,\r\n    \"participantLimit\": 10,\r\n    \"requestModeration\": false,\r\n    \"title\": \"Сплав на байдарках\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event get all",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event get all empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events"
									],
									"variable": [
										{
											"key": "userId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event get all BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events"
									],
									"variable": [
										{
											"key": "userId",
											"value": "a"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3"
										},
										{
											"key": "eventId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event get BAD_REQUEST",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3"
										},
										{
											"key": "eventId",
											"value": "a"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event get NOT_FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3"
										},
										{
											"key": "eventId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event UPDATE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"annotation\": \"Сап прогулки по рекам и каналам – это возможность увидеть Практикбург с другого ракурса\",\r\n    \"category\": 3,\r\n    \"description\": \"От английского SUP - Stand Up Paddle — \\\"стоя на доске с веслом\\\", гавайская разновидность сёрфинга, в котором серфер, стоя на доске, катается на волнах и при этом гребет веслом, а не руками, как в классическом серфинге.\",\r\n    \"eventDate\": \"2023-10-11 23:10:05\",\r\n    \"location\": {\r\n        \"lat\": 55.754167,\r\n        \"lon\": 37.62\r\n    },\r\n    \"paid\": true,\r\n    \"participantLimit\": 7,\r\n    \"requestModeration\": false,\r\n    \"stateAction\": \"CANCEL_REVIEW\",\r\n    \"title\": \"Сап прогулки по рекам и каналам\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3"
										},
										{
											"key": "eventId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event UPDATE state FORBIDDEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"annotation\": \"Сап прогулки по рекам и каналам – это возможность увидеть Практикбург с другого ракурса\",\r\n    \"category\": 3,\r\n    \"description\": \"От английского SUP - Stand Up Paddle — \\\"стоя на доске с веслом\\\", гавайская разновидность сёрфинга, в котором серфер, стоя на доске, катается на волнах и при этом гребет веслом, а не руками, как в классическом серфинге.\",\r\n    \"eventDate\": \"2023-10-11 23:10:05\",\r\n    \"location\": {\r\n        \"lat\": 55.754167,\r\n        \"lon\": 37.62\r\n    },\r\n    \"paid\": true,\r\n    \"participantLimit\": 7,\r\n    \"requestModeration\": false,\r\n    \"stateAction\": \"CANCEL\",\r\n    \"title\": \"Сап прогулки по рекам и каналам\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3"
										},
										{
											"key": "eventId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event UPDATE date FORBIDDEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([409]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"annotation\": \"Сап прогулки по рекам и каналам – это возможность увидеть Практикбург с другого ракурса\",\r\n    \"category\": 3,\r\n    \"description\": \"От английского SUP - Stand Up Paddle — \\\"стоя на доске с веслом\\\", гавайская разновидность сёрфинга, в котором серфер, стоя на доске, катается на волнах и при этом гребет веслом, а не руками, как в классическом серфинге.\",\r\n    \"eventDate\": \"2023-02-13 10:34:00\",\r\n    \"location\": {\r\n        \"lat\": 55.754167,\r\n        \"lon\": 37.62\r\n    },\r\n    \"paid\": true,\r\n    \"participantLimit\": 7,\r\n    \"requestModeration\": false,\r\n    \"stateAction\": \"CANCEL_REVIEW\",\r\n    \"title\": \"Сап прогулки по рекам и каналам\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "3"
										},
										{
											"key": "eventId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event UPDATE initiator NOT_FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"annotation\": \"Сап прогулки по рекам и каналам – это возможность увидеть Практикбург с другого ракурса\",\r\n    \"category\": 3,\r\n    \"description\": \"От английского SUP - Stand Up Paddle — \\\"стоя на доске с веслом\\\", гавайская разновидность сёрфинга, в котором серфер, стоя на доске, катается на волнах и при этом гребет веслом, а не руками, как в классическом серфинге.\",\r\n    \"eventDate\": \"2023-10-11 23:10:05\",\r\n    \"location\": {\r\n        \"lat\": 55.754167,\r\n        \"lon\": 37.62\r\n    },\r\n    \"paid\": true,\r\n    \"participantLimit\": 7,\r\n    \"requestModeration\": false,\r\n    \"stateAction\": \"CANCEL_REVIEW\",\r\n    \"title\": \"Сап прогулки по рекам и каналам\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users/:userId/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":userId",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "2"
										},
										{
											"key": "eventId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "admin",
					"item": [
						{
							"name": "Event UPDATE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"annotation\": \"Сап прогулки по рекам и каналам – это возможность увидеть Практикбург с другого ракурса\",\r\n  \"category\": 3,\r\n  \"description\": \"От английского SUP - Stand Up Paddle — \\\"стоя на доске с веслом\\\", гавайская разновидность сёрфинга, в котором серфер, стоя на доске, катается на волнах и при этом гребет веслом, а не руками, как в классическом серфинге.\",\r\n  \"eventDate\": \"2023-10-11 23:10:05\",\r\n  \"location\": {\r\n    \"lat\": 55.754167,\r\n    \"lon\": 37.62\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 7,\r\n  \"requestModeration\": false,\r\n  \"stateAction\": \"PUBLISH_EVENT\",\r\n  \"title\": \"Сап прогулки по рекам и каналам\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "eventId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event UPDATE event NOT_FOUND",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"annotation\": \"Сап прогулки по рекам и каналам – это возможность увидеть Практикбург с другого ракурса\",\r\n  \"category\": 3,\r\n  \"description\": \"От английского SUP - Stand Up Paddle — \\\"стоя на доске с веслом\\\", гавайская разновидность сёрфинга, в котором серфер, стоя на доске, катается на волнах и при этом гребет веслом, а не руками, как в классическом серфинге.\",\r\n  \"eventDate\": \"2023-10-11 23:10:05\",\r\n  \"location\": {\r\n    \"lat\": 55.754167,\r\n    \"lon\": 37.62\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 7,\r\n  \"requestModeration\": false,\r\n  \"stateAction\": \"PUBLISH_EVENT\",\r\n  \"title\": \"Сап прогулки по рекам и каналам\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "eventId",
											"value": "100"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "!!! Event UPDATE published CONFLICT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"annotation\": \"Сап прогулки по рекам и каналам – это возможность увидеть Практикбург с другого ракурса\",\r\n  \"category\": 3,\r\n  \"description\": \"От английского SUP - Stand Up Paddle — \\\"стоя на доске с веслом\\\", гавайская разновидность сёрфинга, в котором серфер, стоя на доске, катается на волнах и при этом гребет веслом, а не руками, как в классическом серфинге.\",\r\n  \"eventDate\": \"2023-10-11 23:10:05\",\r\n  \"location\": {\r\n    \"lat\": 55.754167,\r\n    \"lon\": 37.62\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 7,\r\n  \"requestModeration\": false,\r\n  \"stateAction\": \"PUBLISH_EVENT\",\r\n  \"title\": \"Сап прогулки по рекам и каналам\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/events/:eventId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"events",
										":eventId"
									],
									"variable": [
										{
											"key": "eventId",
											"value": "100"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Event get all",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/admin/events?users=3&states=&categories&rangeStart&rangeEnd&from&size",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"events"
									],
									"query": [
										{
											"key": "users",
											"value": "3"
										},
										{
											"key": "states",
											"value": ""
										},
										{
											"key": "categories",
											"value": null
										},
										{
											"key": "rangeStart",
											"value": null
										},
										{
											"key": "rangeEnd",
											"value": null
										},
										{
											"key": "from",
											"value": null
										},
										{
											"key": "size",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}